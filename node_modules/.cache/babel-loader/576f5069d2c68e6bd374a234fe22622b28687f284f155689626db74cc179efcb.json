{"ast":null,"code":"import _slicedToArray from\"/Users/himalayagahlot/Desktop/reactjs/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import logo from './logo.svg';\nimport'./App.css';import Alert from'./components/Alert';import About from'./components/About';import Navbar from'./components/Navbar';import TextForm from'./components/TextForm';import React,{useState}from'react';import{BrowserRouter as Router,Switch,Route// Link\n}from\"react-router-dom\";// import { Switch } from 'react-router-dom';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(\"light\"),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setalert=_useState4[1];var showalert=function showalert(type,message){setalert({type:type,message:message});setTimeout(function(){setalert(null);},1000);};var togglemode=function togglemode(){if(mode==='light'){setMode('dark');// console.log(mode)\ndocument.body.style.backgroundColor='grey';showalert(\"Success\",\"Dark mode activated!!\");}else{setMode('light');document.body.style.backgroundColor='white';showalert(\"Success\",\"Light mode activated!!\");}};return/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"textutil\",textabout:\"about\",mode:mode,togglemode:togglemode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/about\",children:/*#__PURE__*/_jsx(About,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(TextForm,{text:\"Text converter\",mode:mode,alert:alert,showalert:showalert})})})]})]})// {/* // -->jsx */}\n;}export default App;","map":{"version":3,"names":["Alert","About","Navbar","TextForm","React","useState","BrowserRouter","Router","Switch","Route","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","mode","setMode","_useState3","_useState4","alert","setalert","showalert","type","message","setTimeout","togglemode","document","body","style","backgroundColor","children","title","textabout","exact","path","className","text"],"sources":["/Users/himalayagahlot/Desktop/reactjs/my-app/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from \"react-router-dom\"\n// import { Switch } from 'react-router-dom';\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n  const [alert, setalert] = useState(null)\n\n  const showalert = (type, message) => {\n    setalert({\n      type: type,\n      message: message\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 1000)\n  }\n\n  const togglemode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      // console.log(mode)\n      document.body.style.backgroundColor = 'grey';\n      showalert(\"Success\", \"Dark mode activated!!\")\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showalert(\"Success\", \"Light mode activated!!\")\n    }\n  }\n  return (\n\n    <Router>\n      <Navbar title=\"textutil\" textabout=\"about\" mode={mode} togglemode={togglemode} />\n      <Alert alert={alert} />\n\n      <Switch>\n        <Route exact path=\"/about\">\n          <About />\n        </Route>\n        <Route exact path=\"/\">\n          <div className=\"container\">\n            <TextForm text=\"Text converter\" mode={mode} alert={alert} showalert={showalert} />\n          </div>\n        </Route>\n      </Switch>\n\n    </Router>\n    // {/* // -->jsx */}\n\n  );\n}\n\nexport default App;\n"],"mappings":"kIAAA;AACA,MAAO,WAAW,CAClB,MAAO,CAAAA,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OACEC,aAAa,GAAI,CAAAC,MAAM,CACvBC,MAAM,CACNC,KACA;AAAA,KACK,kBAAkB,CACzB;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAGA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,IAAAC,SAAA,CAAwBV,QAAQ,CAAC,OAAO,CAAC,CAAAW,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAlCG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IACpB,IAAAI,UAAA,CAA0Bf,QAAQ,CAAC,IAAI,CAAC,CAAAgB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAjCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAEtB,GAAM,CAAAG,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,IAAI,CAAEC,OAAO,CAAK,CACnCH,QAAQ,CAAC,CACPE,IAAI,CAAEA,IAAI,CACVC,OAAO,CAAEA,OACX,CAAC,CAAC,CACFC,UAAU,CAAC,UAAM,CACfJ,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,GAAM,CAAAK,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAS,CACvB,GAAIV,IAAI,GAAK,OAAO,CAAE,CACpBC,OAAO,CAAC,MAAM,CAAC,CACf;AACAU,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,MAAM,CAC5CR,SAAS,CAAC,SAAS,CAAE,uBAAuB,CAAC,CAC/C,CAAC,IACI,CACHL,OAAO,CAAC,OAAO,CAAC,CAChBU,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CR,SAAS,CAAC,SAAS,CAAE,wBAAwB,CAAC,CAChD,CACF,CAAC,CACD,mBAEEX,KAAA,CAACN,MAAM,EAAA0B,QAAA,eACLtB,IAAA,CAACT,MAAM,EAACgC,KAAK,CAAC,UAAU,CAACC,SAAS,CAAC,OAAO,CAACjB,IAAI,CAAEA,IAAK,CAACU,UAAU,CAAEA,UAAW,CAAE,CAAC,cACjFjB,IAAA,CAACX,KAAK,EAACsB,KAAK,CAAEA,KAAM,CAAE,CAAC,cAEvBT,KAAA,CAACL,MAAM,EAAAyB,QAAA,eACLtB,IAAA,CAACF,KAAK,EAAC2B,KAAK,MAACC,IAAI,CAAC,QAAQ,CAAAJ,QAAA,cACxBtB,IAAA,CAACV,KAAK,GAAE,CAAC,CACJ,CAAC,cACRU,IAAA,CAACF,KAAK,EAAC2B,KAAK,MAACC,IAAI,CAAC,GAAG,CAAAJ,QAAA,cACnBtB,IAAA,QAAK2B,SAAS,CAAC,WAAW,CAAAL,QAAA,cACxBtB,IAAA,CAACR,QAAQ,EAACoC,IAAI,CAAC,gBAAgB,CAACrB,IAAI,CAAEA,IAAK,CAACI,KAAK,CAAEA,KAAM,CAACE,SAAS,CAAEA,SAAU,CAAE,CAAC,CAC/E,CAAC,CACD,CAAC,EACF,CAAC,EAEH,CACR;AAAA,CAGJ,CAEA,cAAe,CAAAV,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}