{"ast":null,"code":"var _jsxFileName = \"/Users/himalayagahlot/Desktop/reactjs/my-app/src/App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setalert] = useState(null);\n  const showalert = (type, message) => {\n    setalert({\n      type: type,\n      message: message\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 1000);\n  };\n  const togglemode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      // console.log(mode)\n      document.body.style.backgroundColor = 'grey';\n      showalert(\"Success\", \"Dark mode activated!!\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert(\"Success\", \"Light mode activated!!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"textutil\",\n      textabout: \"about\",\n      mode: mode,\n      togglemode: togglemode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        text: \"Text converter\",\n        mode: mode,\n        alert: alert,\n        showalert: showalert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true)\n  // -->jsx\n  ;\n}\n_s(App, \"V12KAE0MezUDAk0/DnK7Zsoxn70=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Alert","Navbar","TextForm","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setalert","showalert","type","message","setTimeout","togglemode","document","body","style","backgroundColor","children","title","textabout","fileName","_jsxFileName","lineNumber","columnNumber","className","text","_c","$RefreshReg$"],"sources":["/Users/himalayagahlot/Desktop/reactjs/my-app/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React,{useState} from 'react'\n\n\nfunction App() {\n  const[mode,setMode]=useState(\"light\")\n  const[alert,setalert]=useState(null)\n\n  const showalert=(type,message)=>{\n    setalert({\n      type:type,\n      message: message\n    })\n    setTimeout(()=>{\n      setalert(null)\n    },1000)\n  }\n\n  const togglemode=()=>{\n    if(mode==='light'){\n      setMode('dark')\n      // console.log(mode)\n      document.body.style.backgroundColor='grey';\n      showalert(\"Success\",\"Dark mode activated!!\")\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      showalert(\"Success\",\"Light mode activated!!\")\n    }\n  }\n  return (\n    <>\n    <Navbar title=\"textutil\" textabout=\"about\" mode={mode} togglemode={togglemode}/>\n    <Alert alert={alert}/>\n    <div className=\"container\"><TextForm text=\"Text converter\" mode={mode} alert={alert} showalert={showalert}/></div>\n    {/* <About/> */}\n    </>\n    // -->jsx\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,oBAAoB;AACtC;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,IAAI,EAACC,OAAO,CAAC,GAACR,QAAQ,CAAC,OAAO,CAAC;EACrC,MAAK,CAACS,KAAK,EAACC,QAAQ,CAAC,GAACV,QAAQ,CAAC,IAAI,CAAC;EAEpC,MAAMW,SAAS,GAACA,CAACC,IAAI,EAACC,OAAO,KAAG;IAC9BH,QAAQ,CAAC;MACPE,IAAI,EAACA,IAAI;MACTC,OAAO,EAAEA;IACX,CAAC,CAAC;IACFC,UAAU,CAAC,MAAI;MACbJ,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAC,IAAI,CAAC;EACT,CAAC;EAED,MAAMK,UAAU,GAACA,CAAA,KAAI;IACnB,IAAGR,IAAI,KAAG,OAAO,EAAC;MAChBC,OAAO,CAAC,MAAM,CAAC;MACf;MACAQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,MAAM;MAC1CR,SAAS,CAAC,SAAS,EAAC,uBAAuB,CAAC;IAC9C,CAAC,MACG;MACFH,OAAO,CAAC,OAAO,CAAC;MAChBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;MAC3CR,SAAS,CAAC,SAAS,EAAC,wBAAwB,CAAC;IAC/C;EACF,CAAC;EACD,oBACET,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACAlB,OAAA,CAACL,MAAM;MAACwB,KAAK,EAAC,UAAU;MAACC,SAAS,EAAC,OAAO;MAACf,IAAI,EAAEA,IAAK;MAACQ,UAAU,EAAEA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChFxB,OAAA,CAACN,KAAK;MAACa,KAAK,EAAEA;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtBxB,OAAA;MAAKyB,SAAS,EAAC,WAAW;MAAAP,QAAA,eAAClB,OAAA,CAACJ,QAAQ;QAAC8B,IAAI,EAAC,gBAAgB;QAACrB,IAAI,EAAEA,IAAK;QAACE,KAAK,EAAEA,KAAM;QAACE,SAAS,EAAEA;MAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eAEhH;EACF;EAAA;AAEJ;AAACpB,EAAA,CApCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}